import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,b as n}from"./app-DoMxC1ve.js";const e={},l=n(`<p>本文转自：<a href="http://www.cnblogs.com/acpp/archive/2011/06/10/2077592.html" target="_blank" rel="noopener noreferrer">http://www.cnblogs.com/acpp/archive/2011/06/10/2077592.html</a> 根据自己的理解，做了一些修改</p><h3 id="一、默认机制-用磁盘文件来实现php会话" tabindex="-1"><a class="header-anchor" href="#一、默认机制-用磁盘文件来实现php会话"><span>一、默认机制，用磁盘文件来实现PHP会话</span></a></h3><p>php.ini配置</p><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" data-title="ini" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">session.save_handler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> files</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_1-session-start" tabindex="-1"><a class="header-anchor" href="#_1-session-start"><span>1. session_start()</span></a></h4><p><code>session_start()</code>是session机制的开始，它有一定概率开启垃圾回收,因为session是存放在文件中，PHP自身的垃圾回收是无效的，SESSION的回收是要删文件的，这个概率是根据php.ini的配置决定的，但是有的系统是<code>session.gc_probability = 0</code>，这也就是说概率是0，而是通过cron脚本来实现垃圾回收。</p><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" data-title="ini" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">session.gc_probability</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">session.gc_divisor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">1000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">session.gc_maxlifetime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">1440//过期时间 默认24分钟</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">//概率是 session.gc_probability/session.gc_divisor 结果 1/1000,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">//不建议设置过小，因为session的垃圾回收，是需要检查每个文件是否过期的。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">session.save_path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">//好像不同的系统默认不一样，有一种设置是 </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;N;/path&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">//这是随机分级存储，这个样的话，垃圾回收将不起作用，需要自己写脚本</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>session会判断当前是否有<code>$_COOKIE[session_name()];</code><code>session_name()</code>返回保存session_id的COOKIE键值，这个值可以从php.ini找到</p><pre><code>session.name = PHPSESSID //默认值PHPSESSID
</code></pre><p>如果不存在会生成一个<code>session_id</code>,然后把生成的<code>session_id</code>作为COOKIE的值传递到客户端. 相当于执行了下面COOKIE操作. 注意的是，这一步执行了<code>setcookie()</code>操作，COOKIE是在header头中发送的，这之前是不能有输出的，PHP有另外一个函数<code>session_regenerate_id() </code>, 如果使用这个函数，这之前也是不能有输出的。</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">setcookie</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">session_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">    session_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">    session</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">cookie_lifetime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//默认0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">    session</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">cookie_path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//默认&#39;/&#39;当前程序跟目录下都有效</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">    session</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">cookie_domain</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//默认为空</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果存在那么<code>session_id = $_COOKIE[session_name];</code>然后去<code>session.save_path</code>指定的文件夹里去找名字为<code>&#39;SESS_&#39;.session_id()</code>的文件.读取文件的内容反序列化，然后放到<code>$_SESSION</code>中</p><h4 id="_2-为-session赋值" tabindex="-1"><a class="header-anchor" href="#_2-为-session赋值"><span>2. 为$_SESSION赋值</span></a></h4><p>比如新添加一个值<code>$_SESSION[&#39;test&#39;] = &#39;blah&#39;; </code>那么这个<code>$_SESSION</code>只会维护在内存中，当脚本执行结束的时候，用把<code>$_SESSION</code>的值写入到<code>session_id</code>指定的文件夹中，然后关闭相关资源.这个阶段有可能执行更改<code>session_id</code>的操作，比如销毁一个旧的的<code>session_id</code>，生成一个全新的<code>session_id</code>.一半用在自定义session操作，角色的转换上，比如Drupal.Drupal的匿名用户有一个SESSION的，当它登录后需要换用新的<code>session_id</code></p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">isset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$_COOKIE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">session_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()])) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">    setcookie</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">session_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(),</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">time</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">42000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//旧session cookie过期</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">session_regenerate_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//这一步会生成新的session_id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//session_id()返回的是新的值</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-写入session操作" tabindex="-1"><a class="header-anchor" href="#_3-写入session操作"><span>3. 写入SESSION操作</span></a></h4><p>在脚本结束的时候会执行SESSION写入操作，把<code>$_SESSION</code>中值写入到<code>session_id</code>命名的文件中，可能已经存在，可能需要创建新的文件。</p><h4 id="_4-销毁session" tabindex="-1"><a class="header-anchor" href="#_4-销毁session"><span>4. 销毁SESSION</span></a></h4><p>SESSION发出去的COOKIE一般属于即时COOKIE，保存在内存中，当浏览器关闭后，才会过期，假如需要人为强制过期，比如 退出登录，而不是关闭浏览器，那么就需要在代码里销毁SESSION，方法有很多，</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">setcookie</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">session_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(),</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">session_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(),</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">time</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">8000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//退出登录前执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">usset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$_SESSION</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//这会删除所有的$_SESSION数据，刷新后，有COOKIE传过来，但是没有数据。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">session_destroy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//这个作用更彻底，删除$_SESSION 删除session文件，和session_id</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当不关闭浏览器的情况下，再次刷新，2和3都会有COOKIE传过来，但是找不到数据</p><h4 id="_5-关于session的锁机制" tabindex="-1"><a class="header-anchor" href="#_5-关于session的锁机制"><span>5. 关于session的锁机制</span></a></h4><p><a href="http://blog.csdn.net/fdipzone/article/details/30846529" target="_blank" rel="noopener noreferrer">http://blog.csdn.net/fdipzone/article/details/30846529</a></p><p>当执行<code>session_start()</code>后，session会被锁住。直到页面执行完成。 因此在页面执行其间，对sesssion进行写操作，只会保存在内存中，并不会写入session文件。 而对session进行读取，则需要等待，直到session锁解开才能读取到。</p><p>我们可以使用<code>session_write_close()</code>把数据写入session文件并结束session进程。这样就不需要等待页面执行完成，也能获取到执行到哪一步。 但这样有个问题，就是执行完<code>sesssion_write_close()</code>后，对session的任何写操作都不起作用。因为session进程已经结束。 因此需要再写session时，在前面加上<code>session_start()</code></p><h3 id="二、由用户自定义session处理机制" tabindex="-1"><a class="header-anchor" href="#二、由用户自定义session处理机制"><span>二、由用户自定义session处理机制</span></a></h3><p>php.ini配置：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>session.save_handler = user</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>用户自定义session处理机制，更加直观</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>session_set_save_handler(&#39;open&#39;,&#39;close&#39;,&#39;read&#39;,&#39;write&#39;,&#39;destroy&#39;,&#39;gc&#39;);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_1-session-start-1" tabindex="-1"><a class="header-anchor" href="#_1-session-start-1"><span>1. session_start(),</span></a></h4><p>执行<code>open($save_path,$session_name)</code>打开session操作句柄 <code>$save_path </code>在<code>session.save_handler = files</code>的情况下它就是<code>session.save_path</code>，但是如果用户自定的话，这个两个参数都用不上，直接返回TRUE. 执行<code>read($id)</code>从中读取数据.这个<code>$id</code>参数是自动传递的就是<code>session_id()</code>,可以通过这个值进行操作。</p><h4 id="_2-脚本执行结束" tabindex="-1"><a class="header-anchor" href="#_2-脚本执行结束"><span>2. 脚本执行结束</span></a></h4><p>执行write($id,$sess_data) //两个参数，很简单</p><h4 id="_3-假如用户需要session-destroy" tabindex="-1"><a class="header-anchor" href="#_3-假如用户需要session-destroy"><span>3. 假如用户需要session_destroy()</span></a></h4><p>先执行destroy.在执行第2步</p><h4 id="_4-一个实际例子" tabindex="-1"><a class="header-anchor" href="#_4-一个实际例子"><span>4. 一个实际例子：</span></a></h4><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//SESSION初始化的时候调用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$save_path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$session_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    global</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $sess_save_path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    $sess_save_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$save_path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//关闭的时候调用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> close</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> read</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    global</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $sess_save_path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    $sess_file</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$sess_save_path</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/sess_</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$id</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">@</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">file_get_contents</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$sess_file</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//脚本执行结束之前，执行写入操作</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> write</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$sess_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;sdfsf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    global</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $sess_save_path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    $sess_file</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$sess_save_path</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/sess_</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$id</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$fp</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">@</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">fopen</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$sess_file</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;w&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">        $return</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">fwrite</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$fp</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$sess_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">        fclose</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$fp</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> destroy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    global</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $sess_save_path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    $sess_file</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$sess_save_path</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/sess_</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$id</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> @</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">unlink</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$sess_file</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> gc</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$maxlifetime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    global</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $sess_save_path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$sess_save_path</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/sess_*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $filename</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">filemtime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$filename</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $maxlifetime</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> time</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            @</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">unlink</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$filename</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三、使用redis进行处理session" tabindex="-1"><a class="header-anchor" href="#三、使用redis进行处理session"><span>三、使用redis进行处理session</span></a></h3><p>在php 5.4之后，推荐使用面向对象的方法自定义session handler<br> 参考php <a href="http://php.net/manual/zh/class.sessionhandlerinterface.php" target="_blank" rel="noopener noreferrer">SessionHandlerInterface</a><br> 参考predis的session handler实现方案， <a href="https://github.com/nrk/predis/blob/v1.0/src/Session/Handler.php" target="_blank" rel="noopener noreferrer">https://github.com/nrk/predis/blob/v1.0/src/Session/Handler.php</a></p>`,40),h=[l];function t(k,p){return a(),i("div",null,h)}const c=s(e,[["render",t],["__file","2015-09-19-php_session.html.vue"]]),g=JSON.parse('{"path":"/posts/2015-09-19-php_session.html","title":"【转】彻底理解PHP的SESSION机制","lang":"zh-CN","frontmatter":{"v_pageid":"83a5e27687aa0185a055d0f9a511c493","author":"veizz","title":"【转】彻底理解PHP的SESSION机制","date":"2015-09-19T15:59:45.000Z","categories":"php","head":"php的session的读写机制，默认session的文件实现方案的读写锁；自定义session handler"},"headers":[{"level":3,"title":"一、默认机制，用磁盘文件来实现PHP会话","slug":"一、默认机制-用磁盘文件来实现php会话","link":"#一、默认机制-用磁盘文件来实现php会话","children":[]},{"level":3,"title":"二、由用户自定义session处理机制","slug":"二、由用户自定义session处理机制","link":"#二、由用户自定义session处理机制","children":[]},{"level":3,"title":"三、使用redis进行处理session","slug":"三、使用redis进行处理session","link":"#三、使用redis进行处理session","children":[]}],"git":{"createdTime":1442652399000,"updatedTime":1721272368000,"contributors":[{"name":"veizz","email":"veizzsmile@gmail.com","commits":4}]},"readingTime":{"minutes":4.77,"words":1430},"filePathRelative":"posts/2015-09-19-php_session.md","localizedDate":"2015年9月19日","excerpt":"<p>本文转自：<a href=\\"http://www.cnblogs.com/acpp/archive/2011/06/10/2077592.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://www.cnblogs.com/acpp/archive/2011/06/10/2077592.html</a>\\n根据自己的理解，做了一些修改</p>\\n<h3>一、默认机制，用磁盘文件来实现PHP会话</h3>\\n<p>php.ini配置</p>\\n<div class=\\"language-ini line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"ini\\" data-title=\\"ini\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">session.save_handler</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\"> =</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#98C379\\"> files</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>"}');export{c as comp,g as data};
