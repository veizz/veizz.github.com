import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as s,b as e}from"./app-DoMxC1ve.js";const i={},l=e(`<blockquote><p>本文 是在 windows 下实践的总结，mac OX 下可能稍有不同，写作本文时，使用react-native 版本为0.30.0 、react 15.2.1 本文主要作者<a href="https://github.com/SeananXiang" target="_blank" rel="noopener noreferrer">SeananXiang</a></p></blockquote><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建"><span>环境搭建</span></a></h2><p>主要是依次安装 Python 2（注意 官方文档说目前不支持Python 3版本。） 、Node 、React Native命令行工具（react-native-cli）、Android Studio2.0或更高版本、Java Development Kit [JDK] 1.8 ， Android SDK 等， 这部分配置一般不会有问题，详见<a href="http://reactnative.cn/docs/0.30/getting-started.html#content" target="_blank" rel="noopener noreferrer">中文文档</a></p><h2 id="集成到现有工程" tabindex="-1"><a class="header-anchor" href="#集成到现有工程"><span>集成到现有工程</span></a></h2><p>先参考官方文档，这里有个中文翻译版: <a href="http://reactnative.cn/docs/0.30/integration-with-existing-apps.html#content" target="_blank" rel="noopener noreferrer">嵌入到现有原生应用</a></p><h3 id="主要步骤" tabindex="-1"><a class="header-anchor" href="#主要步骤"><span>主要步骤</span></a></h3><h4 id="准备react-native代码" tabindex="-1"><a class="header-anchor" href="#准备react-native代码"><span>准备react-native代码</span></a></h4><div class="language-lang=shell line-numbers-mode" data-highlighter="shiki" data-ext="lang=shell" data-title="lang=shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># 在项目目录下创建rn代码目录</span></span>
<span class="line"><span>mkdir rnComponents &amp;&amp; cd rnComponents</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 初始node化项目目录,自动生成package.json</span></span>
<span class="line"><span>npm init</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 在下面这一步，可能会遇到问题，不能成功安装react, react-native的包。需要科学上网。</span></span>
<span class="line"><span># 一般的解决办法是使用国内的镜像</span></span>
<span class="line"><span># npm config set registry https://registry.npm.taobao.org &amp;&amp; npm install react react-native --save</span></span>
<span class="line"><span>npm install react react-native --save</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 创建index.android.js, 添加示例代码</span></span>
<span class="line"><span>touch index.android.js</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 添加示例代码略，参考官方文档</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 启动服务</span></span>
<span class="line"><span>node node_modules/react-native/local-cli/cli.js start</span></span>
<span class="line"><span># 之后在浏览器里面访问http://localhost:8081/index.android.bundle?platform=android</span></span>
<span class="line"><span># 等一会儿之后，可以看到很多的js代码，到此时，已经准备好js</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 还可以把这条指令添加到package.json里面</span></span>
<span class="line"><span>  &quot;scripts&quot;: {</span></span>
<span class="line"><span>    &quot;start&quot;: &quot;node node_modules/react-native/local-cli/cli.js start&quot;</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span># 之后就可以使用npm start来启动服务</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改build-gradle" tabindex="-1"><a class="header-anchor" href="#修改build-gradle"><span>修改build.gradle</span></a></h3><p>在工程的build.gradle文件加入</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>   allprojects {</span></span>
<span class="line"><span>    repositories {</span></span>
<span class="line"><span>        ...</span></span>
<span class="line"><span>        maven {</span></span>
<span class="line"><span>            // All of React Native (JS, Android binaries) is installed from npm</span></span>
<span class="line"><span>            // $rootDir是指项目根目录，rnComponents是上面创建的，放rn代码的目录</span></span>
<span class="line"><span>            // 编译的时候，会从这个目录下面查找植入react-native所需要的依赖</span></span>
<span class="line"><span>            url &quot;$rootDir/rnComponents/node_modules/react-native/android&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    ...</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在项目build.gradle文件中加入 react-native 依赖</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>  // 注意，这里的版本号跟所使用的react-native的版本号相关，记录时，react-native版本为0.30.0</span></span>
<span class="line"><span>  compile &quot;com.facebook.react:react-native:0.30.0&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="新建activity" tabindex="-1"><a class="header-anchor" href="#新建activity"><span>新建activity</span></a></h3><p>新建MyReactActivity，参考<a href="http://facebook.github.io/react-native/releases/0.30/docs/integration-with-existing-apps.html#add-native-code" target="_blank" rel="noopener noreferrer">官网代码-添加原生代码一节</a></p><p>然后参考文档实现 <code>ReactInstanceManager</code>的生命周期</p><h3 id="剩下的坑" tabindex="-1"><a class="header-anchor" href="#剩下的坑"><span>剩下的坑</span></a></h3><p>到这里貌似配置完成了，运行一把，崩掉了！恩，下面看看这几个坑，掉进去好几天！</p><h4 id="坑0-setusedevelopersupport-buildconfig-debug" tabindex="-1"><a class="header-anchor" href="#坑0-setusedevelopersupport-buildconfig-debug"><span>坑0. setUseDeveloperSupport(BuildConfig.DEBUG)</span></a></h4><p>这只未true , 因 BuildConfig.DEBUG 默认为FALSE，即不会从服务器拉取js文件，而直接用android studio 运行工程，会跳过 js 打包的任务，最终会导致 APP 运行后连不上服务，crash!</p><h4 id="坑1-加入-setuseoldbridge-true" tabindex="-1"><a class="header-anchor" href="#坑1-加入-setuseoldbridge-true"><span>坑1. 加入 .setUseOldBridge(true)</span></a></h4><p>好像是兼容的问题，不加也会导致运行后崩溃。</p><h4 id="坑2-项目-build-gradle-中改一些版本号" tabindex="-1"><a class="header-anchor" href="#坑2-项目-build-gradle-中改一些版本号"><span>坑2. 项目 build.gradle 中改一些版本号</span></a></h4><p>这里的<code>23.0.1</code>很关键</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>compileSdkVersion 23</span></span>
<span class="line"><span>buildToolsVersion &#39;23.0.1&#39;</span></span>
<span class="line"><span>compile &#39;com.android.support:appcompat-v7:23.0.1&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>defaultConfig {</span></span>
<span class="line"><span>    minSdkVersion 16  //或者 在manifest 文件加入&lt;uses-sdk tools:overrideLibrary=&quot;com.facebook.react&quot; /&gt;</span></span>
<span class="line"><span>    ndk {</span></span>
<span class="line"><span>        abiFilters &quot;armeabi-v7a&quot;, &quot;x86&quot;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="坑3-release-环境下打包" tabindex="-1"><a class="header-anchor" href="#坑3-release-环境下打包"><span>坑3. release 环境下打包</span></a></h4><p>a) 首先<code>setUseDeveloperSupport(false)</code>，因为正式打包发布后，除了热更新以外不应再从服务器拉取加载 js 文件，所有js文件都应编译后打包进安装包。</p><p>b) 其次、在 model 目录下 build.gralde 文件配置好release keyStore 相关，这部分不详细介绍(android开发基础知识) c) 打包js代码，放到指定目录</p><div class="language-lang=shell line-numbers-mode" data-highlighter="shiki" data-ext="lang=shell" data-title="lang=shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>react-native bundle --platform android \\</span></span>
<span class="line"><span>--dev false --entry-file index.android.js \\</span></span>
<span class="line"><span>--bundle-output android/app/src/main/assets/index.android.bundle  \\</span></span>
<span class="line"><span>--assets-dest android/app/src/main/res/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数的配置解释：</p><div class="language-lang=shell line-numbers-mode" data-highlighter="shiki" data-ext="lang=shell" data-title="lang=shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>--platform      # 打包平台  android</span></span>
<span class="line"><span>--dev           # 开发模式false</span></span>
<span class="line"><span>--entry-file    # 原始JS文件名</span></span>
<span class="line"><span>--bundle-output     # bundle文件输出目录， 配置到工程的 assets 目录下（若没有，先创建此目录）、</span></span>
<span class="line"><span>--assets-       # 打包的资源目录 ， 配置在工程的 res/  目录下</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完上面命令之后，在bundle output 目录下就可以找到生成的 <code>index.android.bundle</code> 文件了，可以在Android studio 直接运行。</p><h2 id="其它要注意的地方" tabindex="-1"><a class="header-anchor" href="#其它要注意的地方"><span>其它要注意的地方</span></a></h2><h4 id="class不能重名" tabindex="-1"><a class="header-anchor" href="#class不能重名"><span>class不能重名</span></a></h4><p>在集成到原生的项目中的时候，注意class名不能跟框架中class重名。给自己定义的react相关模块起名的时候，可以统一添加前缀。 如果重名的话，可能会遇到react-native模块中某元素不可用的问题。</p><h4 id="node版本的问题" tabindex="-1"><a class="header-anchor" href="#node版本的问题"><span>node版本的问题</span></a></h4><p>尽量使用较新版本的node，react-native在windows下的开发环境支持不是很完美，偶尔会遇到一些问题。使用较新的版本的node，打包js代码的速度会快一点</p><h4 id="图片的圆角问题" tabindex="-1"><a class="header-anchor" href="#图片的圆角问题"><span>图片的圆角问题</span></a></h4><p>在开发中遇到一种情况，react-native中图片可以伸缩。当图片宽高比例较原来缩放较多，且不成比例的时候，有可能会遇到borderRadius失效的问题。</p>`,39),d=[l];function t(r,p){return s(),n("div",null,d)}const h=a(i,[["render",t],["__file","2016-09-17-react-native-with-android-notes.html.vue"]]),v=JSON.parse('{"path":"/posts/2016-09-17-react-native-with-android-notes.html","title":"react-native和已有android项目混合开发","lang":"zh-CN","frontmatter":{"v_pageid":"798d93c646d43bc212b8470133d8cce8","author":"SeananXiang, zhuxindaba, veizz","title":"react-native和已有android项目混合开发","date":"2016-09-17T16:52:03.000Z","categories":"react-native","head":"react-native添加到原生android项目中的记录, 参考官网文档阅读"},"headers":[{"level":2,"title":"环境搭建","slug":"环境搭建","link":"#环境搭建","children":[]},{"level":2,"title":"集成到现有工程","slug":"集成到现有工程","link":"#集成到现有工程","children":[{"level":3,"title":"主要步骤","slug":"主要步骤","link":"#主要步骤","children":[]},{"level":3,"title":"修改build.gradle","slug":"修改build-gradle","link":"#修改build-gradle","children":[]},{"level":3,"title":"新建activity","slug":"新建activity","link":"#新建activity","children":[]},{"level":3,"title":"剩下的坑","slug":"剩下的坑","link":"#剩下的坑","children":[]}]},{"level":2,"title":"其它要注意的地方","slug":"其它要注意的地方","link":"#其它要注意的地方","children":[]}],"git":{"createdTime":1474106091000,"updatedTime":1721271134000,"contributors":[{"name":"veizz","email":"veizzsmile@gmail.com","commits":3}]},"readingTime":{"minutes":4.05,"words":1215},"filePathRelative":"posts/2016-09-17-react-native-with-android-notes.md","localizedDate":"2016年9月17日","excerpt":"<blockquote>\\n<p>本文 是在 windows 下实践的总结，mac OX  下可能稍有不同，写作本文时，使用react-native 版本为0.30.0 、react 15.2.1\\n本文主要作者<a href=\\"https://github.com/SeananXiang\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">SeananXiang</a></p>\\n</blockquote>\\n<h2>环境搭建</h2>\\n<p>主要是依次安装 Python 2（注意 官方文档说目前不支持Python 3版本。） 、Node 、React Native命令行工具（react-native-cli）、Android Studio2.0或更高版本、Java Development Kit [JDK] 1.8 ， Android SDK 等， 这部分配置一般不会有问题，详见<a href=\\"http://reactnative.cn/docs/0.30/getting-started.html#content\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">中文文档</a></p>"}');export{h as comp,v as data};
